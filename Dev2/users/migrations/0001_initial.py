# Generated by Django 5.0.3 on 2025-06-26 18:56

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254)),
                ('entry_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_active', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=50)),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('documentation_submission_start', models.DateTimeField()),
                ('documentation_submission_end', models.DateTimeField()),
                ('proposal_analysis_start', models.DateTimeField()),
                ('proposal_analysis_end', models.DateTimeField()),
                ('result_publication', models.DateTimeField()),
                ('link', models.URLField(max_length=400)),
                ('rectifications', models.JSONField(blank=True, default=list)),
                ('extra_fields', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='Servant',
            fields=[
                ('abstractuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.abstractuser')),
                ('siape', models.CharField(blank=True, max_length=255)),
                ('servant_type', models.CharField(choices=[('TEACHER', 'Professor'), ('ENSINO', 'Ensino'), ('COORDINATOR', 'Coordenador')], max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=('users.abstractuser',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('abstractuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.abstractuser')),
                ('matricula', models.CharField(blank=True, max_length=255)),
                ('course', models.TextField(blank=True)),
                ('drive_folder_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('users.abstractuser',),
        ),
        migrations.CreateModel(
            name='Disciplines',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter the name of the discipline:', max_length=100, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Discipline Name')),
                ('workload', models.CharField(help_text='Enter the workload of the discipline:', max_length=10, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Workload')),
                ('syllabus', models.TextField(blank=True, help_text='Enter the syllabus of the discipline:', max_length=1500, verbose_name='Syllabus')),
                ('main_objetive', models.TextField(blank=True, help_text='Select the main_objetive for this discipline:', max_length=1000, verbose_name='Professors')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the discipline is active and can be used.', verbose_name='Is Active')),
                ('prerequisites', models.ManyToManyField(blank=True, help_text='Select the disciplines that are prerequisites:', related_name='required_disciplines', to='users.disciplines', verbose_name='Prerequisites')),
            ],
            options={
                'verbose_name': 'Discipline',
                'verbose_name_plural': 'Disciplines',
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeCertification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approval_status', models.CharField(choices=[('Pendente', 'Pendente'), ('Deferido', 'Deferido'), ('Indeferido', 'Indeferido')], default='Pendente', max_length=20)),
                ('previous_knowledge', models.TextField()),
                ('scheduling_date', models.DateTimeField(blank=True, null=True)),
                ('test_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.course')),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.disciplines')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certification_notices', to='users.notice')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.student')),
            ],
            options={
                'ordering': ['-create_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ppc',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.course')),
                ('disciplines', models.ManyToManyField(blank=True, related_name='ppc_disciplines', to='users.disciplines')),
            ],
            options={
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RecognitionOfPriorLearning',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approval_status', models.CharField(choices=[('Pendente', 'Pendente'), ('Deferido', 'Deferido'), ('Indeferido', 'Indeferido')], default='Pendente', max_length=20)),
                ('course_workload', models.IntegerField()),
                ('course_studied_workload', models.IntegerField()),
                ('previous_course', models.CharField(max_length=255)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.course')),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.disciplines')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recognition_notices', to='users.notice')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.student')),
            ],
            options={
                'ordering': ['-create_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255)),
                ('content_type', models.CharField(max_length=50)),
                ('is_test_attachment', models.BooleanField(default=False)),
                ('certification_form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='users.knowledgecertification')),
                ('recognition_form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='users.recognitionofpriorlearning')),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('CRE', 'Solicitação criada'), ('CANCELED', 'Cancelado pelo Aluno'), ('C_CRE', 'Cancelado pelo Ensino'), ('A_CRE', 'Encaminhado para o Coordenador'), ('COORD', 'Em análise do Coordenador'), ('C_COORD', 'Cancelado pelo Coordenador'), ('A_COORD', 'Analisado pelo Coordenador'), ('PROF', 'Em análise do Professor'), ('RJ_PROF', 'Rejeitado pelo Professor'), ('A_PROF', 'Analisado pelo Professor'), ('IN_AP_COORD', 'Em homologação do Coordenador'), ('R_COORD', 'Retornado pelo Coordenador'), ('RJ_COORD', 'Rejeitado pelo Coordenador'), ('AP_COORD', 'Homologado pelo Coordenador'), ('IN_AP_CRE', 'Etapa de Registro do Ensino'), ('R_CRE', 'Retornado pelo Ensino'), ('RJ_CRE', 'Rejeitado pelo Ensino'), ('AP_CRE', 'Finalizado')], max_length=20)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('initial_step_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('final_step_date', models.DateTimeField(blank=True, null=True)),
                ('current', models.BooleanField(default=True)),
                ('certification_form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='users.knowledgecertification')),
                ('recognition_form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='users.recognitionofpriorlearning')),
                ('responsible', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.servant')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='coordinator',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.servant'),
        ),
        migrations.AddField(
            model_name='course',
            name='professors',
            field=models.ManyToManyField(blank=True, related_name='course_professors', to='users.servant'),
        ),
    ]
